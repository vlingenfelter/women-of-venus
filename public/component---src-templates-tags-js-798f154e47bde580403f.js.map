{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","location","tag","allMarkdownRemark","edges","totalCount","siteTitle","site","siteMetadata","title","tagHeader","className","map","node","slug","fields","frontmatter","style","boxShadow","to","fluid","face","childImageSharp","alt","marginRight","rhythm","marginBottom","maxWidth","display","justifyContent","pageQuery"],"mappings":"4FAAA,mIAgFeA,UAtEF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzBC,EAAQH,EAARG,IADwC,EAElBF,EAAKG,kBAA3BC,EAFwC,EAExCA,MAAOC,EAFiC,EAEjCA,WACTC,EAAYN,EAAKO,KAAKC,aAAaC,MACnCC,EAAS,OAAUR,GACR,IAAfG,EAAmB,GAAK,KAG1B,OACE,kBAAC,IAAD,CAAQJ,SAAUA,EAAUQ,MAAOH,GACjC,4BAAKI,GACL,yBAAKC,UAAU,SACVP,EAAMQ,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAL,EAAUI,EAAKG,YAAYP,MAA3BA,MACR,OACE,kBAAC,OAAD,CAAMQ,MAAO,CAAEC,UAAU,QAAWC,GAAIL,GACpC,kBAAC,IAAD,CACEM,MAAOP,EAAKG,YAAYK,KAAKC,gBAAgBF,MAC7CG,IAAKd,EACLQ,MAAO,CACLO,YAAaC,YAAO,IACpBC,aAAc,EACdC,SAAU,YAQ1B,yBACEV,MAAO,CACHW,QAAQ,OACRC,eAAe,WAGrB,kBAAC,OAAD,CACEV,GAAG,gBADL,yBAmCC,IAAMW,EAAS","file":"component---src-templates-tags-js-798f154e47bde580403f.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport Image from \"gatsby-image\"\nimport Layout from \"../components/layout\"\n\n\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const tagHeader = `The ${tag}${\n    totalCount === 1 ? \"\" : \"s\"\n  }`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>{tagHeader}</h1>\n      <div className=\"faces\">\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { title } = node.frontmatter.title\n            return (\n              <Link style={{ boxShadow: `none` }} to={slug}>\n                  <Image \n                    fluid={node.frontmatter.face.childImageSharp.fluid}\n                    alt={title}\n                    style={{\n                      marginRight: rhythm(1 / 2),\n                      marginBottom: 0,\n                      maxWidth: 300,\n                    }}\n                  />\n              \n                  </Link>\n            )\n          })}\n      </div>\n      <div\n        style={{\n            display: `flex`,\n            justifyContent: `center`,\n          }}\n      >\n      <Link\n        to='/categories/'\n      >\n        See all categories\n      </Link>\n      </div>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            face {\n              childImageSharp {\n                fluid(maxWidth: 300, quality: 90, traceSVG: { color: \"#e77c7c\"}) {\n                  base64\n                  tracedSVG\n                  aspectRatio\n                  src\n                  srcSet\n                  srcWebp\n                  srcSetWebp\n                  sizes\n                  originalImg\n                  originalName\n                  presentationWidth\n                  presentationHeight\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}