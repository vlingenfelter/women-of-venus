{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","className","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","fluid","face","childImageSharp","alt","marginRight","maxWidth","pageQuery"],"mappings":"2FAAA,+IA0EeA,UAzCG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,yBAAKI,UAAU,SACdH,EAAMI,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACEA,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,MAGvB,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAW,QAAUC,GAAIT,EAAKE,OAAOC,MACpD,kBAAC,IAAD,CACEO,MAAOV,EAAKC,YAAYU,KAAKC,gBAAgBF,MAC7CG,IAAKb,EAAKC,YAAYP,MACtBW,MAAO,CACLS,YAAaP,YAAO,IACpBD,aAAc,EACdS,SAAU,iBAkBvB,IAAMC,EAAY","file":"component---src-pages-index-tsx-b4a05deac4d1dfa31538.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Image from \"gatsby-image\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }\n  }\n}\n\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <div className=\"faces\">\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 2),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                <Image \n                  fluid={node.frontmatter.face.childImageSharp.fluid}\n                  alt={node.frontmatter.title}\n                  style={{\n                    marginRight: rhythm(1 / 2),\n                    marginBottom: 0,\n                    maxWidth: 300,\n                  }}\n                />\n            \n                </Link>\n              </h3>\n            </header>\n          </article>\n        )\n      })}\n      </div>\n     \n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___index], order: ASC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            face {\n              childImageSharp {\n                fluid(maxWidth: 300, quality: 90, traceSVG: { color: \"#e77c7c\"}) {\n                  base64\n                  tracedSVG\n                  aspectRatio\n                  src\n                  srcSet\n                  srcWebp\n                  srcSetWebp\n                  sizes\n                  originalImg\n                  originalName\n                  presentationWidth\n                  presentationHeight\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}